{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Column.tsx","webpack:///./components/DashBox.tsx","webpack:///./components/Footer.tsx","webpack:///./components/GlobalStyle.tsx","webpack:///./components/Header.tsx","webpack:///./components/Meta.tsx","webpack:///./components/PreviewLoading.tsx","webpack:///./components/PreviewSync.tsx","webpack:///./components/Title.tsx","webpack:///./graphql/__generated__/index.tsx","webpack:///./layouts/index.tsx","webpack:///./pages/index.tsx","webpack:///./prismic-configuration.ts","webpack:///./styles/fonts.ts","webpack:///./styles/media.ts","webpack:///./styles/typography.ts","webpack:///./utils/getColumnSections.ts","webpack:///./utils/getHeader.ts","webpack:///./utils/getPrismicClient.ts","webpack:///./utils/richText.tsx","webpack:///external \"@apollo/react-components\"","webpack:///external \"@apollo/react-hoc\"","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"apollo-client\"","webpack:///external \"apollo-link-prismic\"","webpack:///external \"graphql-tag\"","webpack:///external \"lodash\"","webpack:///external \"next/head\"","webpack:///external \"prismic-reactjs\"","webpack:///external \"react\"","webpack:///external \"react-resize-detector\"","webpack:///external \"react-responsive\"","webpack:///external \"styled-components\"","webpack:///external \"styled-normalize\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from \"react\";\nimport { ISection } from \"../types/models\";\nimport { DashColumn, IDashProps, DashRow } from \"./DashBox\";\nimport { richText } from \"../utils/richText\";\nimport styled from \"styled-components\";\n\nconst Container = styled(DashColumn)`\n    \n`;\n\ninterface IColumnProps {\n    values: ISection[];\n    isMobile: boolean;\n    contentId: string;\n}\n\nexport const Column: React.FC<IColumnProps & IDashProps> = ({ contentId, values, dash, ...rest }) => {\n\n    return (\n        <Container {...rest}>\n            <DashColumn {...{ dash }} id={contentId}>\n                {values.map(section => (\n                    <React.Fragment key={section.id}>\n                        <DashRow dash={{ bottom: true }} padX={true} padY={true}>\n                            {richText(section.title)}\n                        </DashRow>\n                        {\n                            section.articles.map(article => {\n                                if (article.id === 'XoE7VRIAACTouko9') console.log(article);\n                                return (<DashColumn padX={true} padY={true} key={article.id}>\n                                    {article.slices.map(slice => {\n\n                                        switch (slice.type) {\n\n                                            case (\"html\"): {\n\n                                                return (\n                                                    richText(slice.html_rich_text)\n                                                )\n                                            }\n                                            case (\"vimeo\"): {\n                                                if (!slice.vimeo_embed) return;\n                                                const thumbnailUrl = slice.vimeo_thumbnail_image?.url || slice.vimeo_embed?.thumbnail_url;\n                                                if (!thumbnailUrl) return;\n                                                return (\n                                                    <>\n                                                        <a href={slice.vimeo_embed.embed_url} target=\"_blank\"><img src={thumbnailUrl} /></a>\n                                                        {richText(slice.vimeo_link_text)}\n                                                    </>\n                                                )\n                                            }\n                                            case (\"link\"): {\n                                                const thumbnailUrl = slice.link_thumbnail?.url;\n                                                const content = (thumbnailUrl) ? <img src={thumbnailUrl} /> : <span>{slice.link_text}</span>\n                                                return (\n                                                    <>\n                                                        {richText(slice.link_text_before)}\n                                                        <a href={slice.link_url} target=\"_blank\">{content}</a>\n                                                        {richText(slice.link_text_after)}\n                                                    </>\n                                                )\n                                            }\n                                            case (\"\"): {\n\n                                            }\n                                            case (\"image\"): {\n                                                const thumbnailUrl = slice.image_file?.thumbnailUrl;\n                                                if (!thumbnailUrl) return;\n\n                                                return (\n                                                    <>\n                                                        {richText(slice.image_text_before)}\n                                                        <a href={slice.image_file?.url} target=\"_blank\">\n                                                            <img src={thumbnailUrl} />\n                                                            {slice.image_link_text}\n                                                        </a>\n                                                        {richText(slice.image_text_after)}\n                                                    </>\n                                                )\n                                            }\n                                        }\n                                    })}\n                                </DashColumn>)\n                            })\n                        }\n                    </React.Fragment>\n                ))}\n            </DashColumn>\n        </Container >\n    );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport interface IDashProps {\n    dash?: {\n        top?: boolean;\n        bottom?: boolean;\n        left?: boolean;\n        right?: boolean;\n    },\n    padX?: boolean;\n    padY?: boolean;\n    id?: string;\n}\n\n\n\nconst cover = css`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    opacity: 0.25;\n    z-index: -1;\n\n`;\n\nconst dotSize = 3;\nconst size = 8;\nconst r = dotSize / 2;\n\nconst total = (size * 2) + 2 * r\n\nconst opacity = 0.25;\n\nconst borderImg = `\n<svg viewBox=\"0 0 ${total} ${total}\" width=\"${total}px\" height=\"${total}px\" x=\"0px\" y=\"0px\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle opacity=\"${opacity}\" cx=\"${r + (size * 0)}\" cy=\"${r + (size * 0)}\" r=\"${r}\"/>\n    <circle opacity=\"${opacity}\" cx=\"${r + (size * 1)}\" cy=\"${r + (size * 0)}\" r=\"${r}\"/>\n    <circle opacity=\"${opacity}\" cx=\"${r + (size * 2)}\" cy=\"${r + (size * 0)}\" r=\"${r}\"/>\n    <circle opacity=\"${opacity}\" cx=\"${r + (size * 0)}\" cy=\"${r + (size * 1)}\" r=\"${r}\"/>\n    <circle opacity=\"${opacity}\" cx=\"${r + (size * 2)}\" cy=\"${r + (size * 1)}\" r=\"${r}\"/>\n    <circle opacity=\"${opacity}\" cx=\"${r + (size * 0)}\" cy=\"${r + (size * 2)}\" r=\"${r}\"/>\n    <circle opacity=\"${opacity}\" cx=\"${r + (size * 1)}\" cy=\"${r + (size * 2)}\" r=\"${r}\"/>\n    <circle opacity=\"${opacity}\" cx=\"${r + (size * 2)}\" cy=\"${r + (size * 2)}\" r=\"${r}\"/>\n</svg>    \n`;\n\nexport const svgData = (svg: string) => `data:image/svg+xml;utf8,${svg}`;\n\nconst borderColor = `transparent`;\n// const borderColor = `red`;\n\nconst Container = styled.div<IDashProps>`\n    position: relative;\n    z-index: 0;\n    ${p => p.padX ? `padding-left: 6px; padding-right: 6px;` : ``}\n    ${p => p.padY ? `padding-top: 6px; padding-bottom: 6px;` : ``}\n    ${p => p.dash?.top ? `border-top: ${dotSize}px solid ${borderColor};` : ``};\n    ${p => p.dash?.left ? `border-left: ${dotSize}px solid ${borderColor};` : ``};\n    ${p => p.dash?.bottom ? `border-bottom: ${dotSize}px solid ${borderColor};` : ``};\n    ${p => p.dash?.right ? `border-right: ${dotSize}px solid ${borderColor};` : ``};\n    border-image-source: url('${svgData(borderImg)}');\n    border-image-slice: ${dotSize};\n    border-image-width: ${p => `${p.dash?.top ? `${dotSize}px` : `0`} ${p.dash?.right ? `${dotSize}px` : `0`} ${p.dash?.bottom ? `${dotSize}px` : `0`} ${p.dash?.left ? `${dotSize}px` : `0`} `};\n\n    border-image-repeat: round;\n`;\n\nexport const DashBox: React.FC<IDashProps> = ({ children, ...props }) => (\n    <Container {...props}>\n        {children}\n    </Container>\n)\n\nDashBox.defaultProps = {\n\n}\n\nexport const DashRow = styled(DashBox)`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: center;\n    width: 100%;\n    text-align: center;\n`;\n\nexport const DashColumn = styled(DashBox)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    text-align: center;\n    width: 100%;\n`","import React from 'react'\r\n// import { footerStyles } from 'styles'\r\n\r\n/**\r\n * Site footer component\r\n */\r\nconst Footer = () => (\r\n  <footer>\r\n\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","import { createGlobalStyle } from 'styled-components';\nimport { fonts } from '../styles/fonts';\nimport { typography } from '../styles/typography';\n\nexport const GlobalStyle = createGlobalStyle`  \n  ${fonts}\n  ${typography}\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n    background: white;\n    min-height: 100%;\n    z-index: 1;\n  }\n  * {\n    box-sizing: border-box;\n  }\n`;\n","import { IHeader, IHeaderPart } from \"../types/models\";\nimport { richText } from \"../utils/richText\";\nimport React from \"react\";\nimport { DashBox, DashColumn, IDashProps } from \"./DashBox\";\nimport { css } from \"styled-components\";\n\nconst subtitle = css`\n    font-family: LetterGothicSlanted, LucidaConsole;\n    font-size: 25px;\n    letter-spacing: -3px;\n    text-transform: uppercase;\n`;\n\nexport interface IHeaderProps {\n    values: IHeaderPart\n}\n\nexport const Header: React.FC<IHeaderProps & IDashProps> = ({ values, ...rest }) => {\n\n    return (\n        <DashColumn {...rest}>\n            {values.title && <DashBox padX={true} dash={{ bottom: true }} >{richText(values.title)}</DashBox>}\n            <DashBox padX={true}>\n                {values.body && richText(values.body)}\n            </DashBox>\n        </DashColumn>\n    );\n};","import { Fragment } from 'react'\r\nimport Head from 'next/head'\r\nimport { apiEndpoint } from '../prismic-configuration'\r\nimport { PreviewSync } from './PreviewSync';\r\nimport { PreviewLoading } from './PreviewLoading';\r\n\r\n/**\r\n * Meta data component\r\n */\r\nconst Meta = () => {\r\n  const repoNameArray = /([^\\/]+)\\.cdn.prismic\\.io\\/api/.exec(apiEndpoint);\r\n  const repoName = repoNameArray?.[1];\r\n  const loadingElementId = \"prismic-loading-overlay\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>Beaufort</title>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"></meta>\r\n        <link href=\"https://fonts.googleapis.com/css?family=Lato:300,400,700,900\" rel=\"stylesheet\" />\r\n        <link rel=\"icon\" href=\"/favicon.png\" type=\"image/png\" />\r\n        <script async defer src={`//static.cdn.prismic.io/prismic.js?repo=${repoName}&new=true`} />\r\n        {repoName && <PreviewSync {...{ repoName, loadingElementId }} />}\r\n      </Head>\r\n      <PreviewLoading id={loadingElementId} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Meta;\r\n","import React, { useState } from \"react\";\n\ninterface PreviewLoadingProps {\n    id: string;\n}\n\nexport const PreviewLoading: React.FC<PreviewLoadingProps> = ({ id }) => {\n\n    return (\n        <div {...{ id }} aria-hidden=\"true\" style={{ display: 'none' }}>\n            <div tabIndex={-1} data-micromodal-close>\n                <div role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-1-title\" >\n                    <header>\n                        <h2 id=\"modal-1-title\">\n                            Loading prismic preview mode...\n        </h2>\n                        <button aria-label=\"Close modal\" data-micromodal-close></button>\n                    </header>\n                    <div id=\"modal-1-content\">\n                        Just hold on a second...\n      </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\n\ntype PreviewSyncProps = {\n  repoName: string;\n  loadingElementId?: string;\n};\n\nexport const PreviewSync: React.FC<PreviewSyncProps> = ({ repoName, loadingElementId }) => <script lang=\"javascript\" dangerouslySetInnerHTML={{\n  __html: `\n        (function syncPrismicAndNextPreviews() {\n\n          function getCookieValue(key) {              \n            const cookieMatcher = new RegExp(\"(?:(?:^|.*;\\\\\\\\s*)\" + key + \"\\\\\\\\s*\\\\\\\\=\\\\\\\\s*([^;]*).*$)|^.*$\");\n            return document.cookie.replace(cookieMatcher, \\\"$1\\\");\n          }\n          \n          const prismicCookieValue = getCookieValue(\"io.prismic.preview\");            \n          const decodedCookieValue = decodeURIComponent(prismicCookieValue);            \n          const prismic = decodedCookieValue !== \"\" ? JSON.parse(decodedCookieValue) : {};            \n          const prismicSiteKey = \"${repoName}.prismic.io\";\n          const prismicSite = prismic[prismicSiteKey];\n                             \n          const isEntering = getCookieValue(\"expectPrismicPreview\") === \"entering\";\n          const isEntered = getCookieValue(\"expectPrismicPreview\") === \"entered\";\n          const hasPrismicPreview = !!prismicSite && !!prismicSite.preview;\n          \n          if (hasPrismicPreview) {\n            if (isEntering) {                \n              // Set entered in cookie here.\n              document.cookie = \"expectPrismicPreview=entered; path=/\";\n              console.log('Entered prismic preview mode...');\n            }\n            else if (isEntered) {\n              console.log('Currently in prismic preview mode...');\n            }\n            else {\n              console.log('Nextjs preview was deactivated by the user or expired, but prismic preview is still activated.');                \n              console.log('Reactivating nextjs preview...');\n              window.location.replace('/api/preview?token='+encodeURIComponent(prismicSite.preview));\n            }\n          }\n          else {\n            if (isEntering) {\n              console.log('Waiting to enter prismic preview mode...');                \n              \n              ${loadingElementId && `\n                document.addEventListener(\"DOMContentLoaded\", function(event) { \n                  const loader = document.getElementById(\"${loadingElementId}\")\n                  console.log(loader);\n                  if(loader) {\n                    loader.style.display = \"block\";\n                  }  \n                });\n              `}\n\n            }\n            else if (isEntered) {\n              console.log('Prismic preview was deactivated by the user or expired, but nextjs preview is still activated.');\n              console.log('Deactivating nextjs preview...');                \n              window.location.replace('/api/preview-clear');                \n            }\n            else {\n              // console.log('In static viewing mode.');\n              // Do nothing.\n            }\n          }\n        })();        \n        `\n}} />;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { DashColumn, IDashProps } from \"./DashBox\";\nimport { richText } from \"../utils/richText\";\n\nconst Container = styled(DashColumn)`\n    justify-content: center;\n`;\n\ninterface ITitleProps {\n    values: string\n}\n\nexport const Title: React.FC<ITitleProps & IDashProps> = ({ values, ...rest }) => {\n\n    return (\n        <Container {...rest}>{richText(values)}</Container>\n    );\n};\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactComponents from '@apollo/react-components';\nimport * as ApolloReactHoc from '@apollo/react-hoc';\nexport type Maybe<T> = T | null;\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n/** All built-in and custom scalars, mapped to their actual values */\nexport interface Scalars {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  DateTime: any;\n  Long: any;\n  Json: any;\n  Date: any;\n}\n\n/** A prismic document */\nexport interface _Document {\n  _meta: Meta;\n}\n\n/** A connection to a list of items. */\nexport interface _DocumentConnection {\n   __typename: '_DocumentConnection';\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<_DocumentEdge>>>;\n  totalCount: Scalars['Long'];\n}\n\n/** An edge in a connection. */\nexport interface _DocumentEdge {\n   __typename: '_DocumentEdge';\n  /** The item at the end of the edge. */\n  node: _Document;\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n}\n\n/** An external link */\nexport interface _ExternalLink  extends _Linkable {\n   __typename: '_ExternalLink';\n  url: Scalars['String'];\n  _linkType?: Maybe<Scalars['String']>;\n}\n\n/** A linked file */\nexport interface _FileLink  extends _Linkable {\n   __typename: '_FileLink';\n  name: Scalars['String'];\n  url: Scalars['String'];\n  size: Scalars['Long'];\n  _linkType?: Maybe<Scalars['String']>;\n}\n\n/** A linked image */\nexport interface _ImageLink  extends _Linkable {\n   __typename: '_ImageLink';\n  name: Scalars['String'];\n  url: Scalars['String'];\n  size: Scalars['Long'];\n  height: Scalars['Int'];\n  width: Scalars['Int'];\n  _linkType?: Maybe<Scalars['String']>;\n}\n\n/** A prismic link */\nexport interface _Linkable {\n  _linkType?: Maybe<Scalars['String']>;\n}\n\nexport interface Article  extends _Document, _Linkable {\n   __typename: 'Article';\n  articleDate?: Maybe<Scalars['Date']>;\n  highlight?: Maybe<Scalars['String']>;\n  section?: Maybe<_Linkable>;\n  body?: Maybe<Array<ArticleBody>>;\n  _meta: Meta;\n  _linkType?: Maybe<Scalars['String']>;\n}\n\nexport type ArticleBody = ArticleBodyHtml | ArticleBodyVimeo | ArticleBodyYoutube | ArticleBodySoundcloud | ArticleBodyImage | ArticleBodyLink | ArticleBodyBandcamp_Part;\n\nexport interface ArticleBodyBandcamp_Part {\n   __typename: 'ArticleBodyBandcamp_part';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodyBandcamp_PartPrimary>;\n}\n\nexport interface ArticleBodyBandcamp_PartPrimary {\n   __typename: 'ArticleBodyBandcamp_partPrimary';\n  bandcamp_url?: Maybe<Scalars['String']>;\n}\n\nexport interface ArticleBodyHtml {\n   __typename: 'ArticleBodyHtml';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodyHtmlPrimary>;\n}\n\nexport interface ArticleBodyHtmlPrimary {\n   __typename: 'ArticleBodyHtmlPrimary';\n  html_rich_text?: Maybe<Scalars['Json']>;\n}\n\nexport interface ArticleBodyImage {\n   __typename: 'ArticleBodyImage';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodyImagePrimary>;\n}\n\nexport interface ArticleBodyImagePrimary {\n   __typename: 'ArticleBodyImagePrimary';\n  image_text_before?: Maybe<Scalars['Json']>;\n  image_link_text?: Maybe<Scalars['Json']>;\n  image_file?: Maybe<Scalars['Json']>;\n  image_text_below?: Maybe<Scalars['Json']>;\n}\n\nexport interface ArticleBodyLink {\n   __typename: 'ArticleBodyLink';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodyLinkPrimary>;\n}\n\nexport interface ArticleBodyLinkPrimary {\n   __typename: 'ArticleBodyLinkPrimary';\n  link_text_before?: Maybe<Scalars['Json']>;\n  link_text?: Maybe<Scalars['Json']>;\n  link_url?: Maybe<_Linkable>;\n  link_thumbnail?: Maybe<Scalars['Json']>;\n  link_text_after?: Maybe<Scalars['Json']>;\n}\n\nexport interface ArticleBodySoundcloud {\n   __typename: 'ArticleBodySoundcloud';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodySoundcloudPrimary>;\n}\n\nexport interface ArticleBodySoundcloudPrimary {\n   __typename: 'ArticleBodySoundcloudPrimary';\n  soundcloud_embed?: Maybe<Scalars['Json']>;\n}\n\nexport interface ArticleBodyVimeo {\n   __typename: 'ArticleBodyVimeo';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodyVimeoPrimary>;\n}\n\nexport interface ArticleBodyVimeoPrimary {\n   __typename: 'ArticleBodyVimeoPrimary';\n  vimeo_link_text?: Maybe<Scalars['Json']>;\n  vimeo_embed?: Maybe<Scalars['Json']>;\n  vimeo_thumbnail_image?: Maybe<Scalars['Json']>;\n}\n\nexport interface ArticleBodyYoutube {\n   __typename: 'ArticleBodyYoutube';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodyYoutubePrimary>;\n}\n\nexport interface ArticleBodyYoutubePrimary {\n   __typename: 'ArticleBodyYoutubePrimary';\n  youtube_link_text?: Maybe<Scalars['Json']>;\n  youtube_embed?: Maybe<Scalars['Json']>;\n  youtube_thumbnail_image?: Maybe<Scalars['Json']>;\n}\n\n/** A connection to a list of items. */\nexport interface ArticleConnectionConnection {\n   __typename: 'ArticleConnectionConnection';\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ArticleConnectionEdge>>>;\n  totalCount: Scalars['Long'];\n}\n\n/** An edge in a connection. */\nexport interface ArticleConnectionEdge {\n   __typename: 'ArticleConnectionEdge';\n  /** The item at the end of the edge. */\n  node: Article;\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n}\n\n\n\nexport interface Home  extends _Document, _Linkable {\n   __typename: 'Home';\n  homepageTitle?: Maybe<Scalars['Json']>;\n  header_left_title?: Maybe<Scalars['Json']>;\n  header_left_rich_text?: Maybe<Scalars['Json']>;\n  column1_sections?: Maybe<Array<HomeColumn1_Sections>>;\n  column2_sections?: Maybe<Array<HomeColumn2_Sections>>;\n  column3_sections?: Maybe<Array<HomeColumn3_Sections>>;\n  column4_sections?: Maybe<Array<HomeColumn4_Sections>>;\n  column5_sections?: Maybe<Array<HomeColumn5_Sections>>;\n  header_right_title?: Maybe<Scalars['Json']>;\n  header_right_rich_text?: Maybe<Scalars['Json']>;\n  _meta: Meta;\n  _linkType?: Maybe<Scalars['String']>;\n}\n\nexport interface HomeColumn1_Sections {\n   __typename: 'HomeColumn1_sections';\n  section?: Maybe<_Linkable>;\n}\n\nexport interface HomeColumn2_Sections {\n   __typename: 'HomeColumn2_sections';\n  section?: Maybe<_Linkable>;\n}\n\nexport interface HomeColumn3_Sections {\n   __typename: 'HomeColumn3_sections';\n  section?: Maybe<_Linkable>;\n}\n\nexport interface HomeColumn4_Sections {\n   __typename: 'HomeColumn4_sections';\n  section?: Maybe<_Linkable>;\n}\n\nexport interface HomeColumn5_Sections {\n   __typename: 'HomeColumn5_sections';\n  section?: Maybe<_Linkable>;\n}\n\n/** A connection to a list of items. */\nexport interface HomeConnectionConnection {\n   __typename: 'HomeConnectionConnection';\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<HomeConnectionEdge>>>;\n  totalCount: Scalars['Long'];\n}\n\n/** An edge in a connection. */\nexport interface HomeConnectionEdge {\n   __typename: 'HomeConnectionEdge';\n  /** The item at the end of the edge. */\n  node: Home;\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n}\n\n\n\nexport interface Meta {\n   __typename: 'Meta';\n  /** The id of the document. */\n  id: Scalars['String'];\n  /** The uid of the document. */\n  uid?: Maybe<Scalars['String']>;\n  /** The type of the document. */\n  type: Scalars['String'];\n  /** The tags of the document. */\n  tags: Array<Scalars['String']>;\n  /** The language of the document. */\n  lang: Scalars['String'];\n  /** Alternate languages the document. */\n  alternateLanguages: Array<RelatedDocument>;\n  /** The first publication date of the document. */\n  firstPublicationDate?: Maybe<Scalars['DateTime']>;\n  /** The last publication date of the document. */\n  lastPublicationDate?: Maybe<Scalars['DateTime']>;\n}\n\n/** Information about pagination in a connection. */\nexport interface PageInfo {\n   __typename: 'PageInfo';\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n}\n\nexport interface Query {\n   __typename: 'Query';\n  _allDocuments: _DocumentConnection;\n  allHomes: HomeConnectionConnection;\n  allArticles: ArticleConnectionConnection;\n  allSections: SectionConnectionConnection;\n}\n\n\nexport interface Query_AllDocumentsArgs {\n  sortBy?: Maybe<SortDocumentsBy>;\n  id?: Maybe<Scalars['String']>;\n  id_in?: Maybe<Array<Scalars['String']>>;\n  uid?: Maybe<Scalars['String']>;\n  uid_in?: Maybe<Array<Scalars['String']>>;\n  lang?: Maybe<Scalars['String']>;\n  tags?: Maybe<Array<Scalars['String']>>;\n  tags_in?: Maybe<Array<Scalars['String']>>;\n  type?: Maybe<Scalars['String']>;\n  type_in?: Maybe<Array<Scalars['String']>>;\n  firstPublicationDate?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  fulltext?: Maybe<Scalars['String']>;\n  similar?: Maybe<Similar>;\n  before?: Maybe<Scalars['String']>;\n  after?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n}\n\n\nexport interface QueryAllHomesArgs {\n  sortBy?: Maybe<SortHomey>;\n  id?: Maybe<Scalars['String']>;\n  id_in?: Maybe<Array<Scalars['String']>>;\n  uid?: Maybe<Scalars['String']>;\n  uid_in?: Maybe<Array<Scalars['String']>>;\n  lang?: Maybe<Scalars['String']>;\n  tags?: Maybe<Array<Scalars['String']>>;\n  tags_in?: Maybe<Array<Scalars['String']>>;\n  type?: Maybe<Scalars['String']>;\n  type_in?: Maybe<Array<Scalars['String']>>;\n  firstPublicationDate?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  fulltext?: Maybe<Scalars['String']>;\n  similar?: Maybe<Similar>;\n  where?: Maybe<WhereHome>;\n  before?: Maybe<Scalars['String']>;\n  after?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n}\n\n\nexport interface QueryAllArticlesArgs {\n  sortBy?: Maybe<SortArticley>;\n  id?: Maybe<Scalars['String']>;\n  id_in?: Maybe<Array<Scalars['String']>>;\n  uid?: Maybe<Scalars['String']>;\n  uid_in?: Maybe<Array<Scalars['String']>>;\n  lang?: Maybe<Scalars['String']>;\n  tags?: Maybe<Array<Scalars['String']>>;\n  tags_in?: Maybe<Array<Scalars['String']>>;\n  type?: Maybe<Scalars['String']>;\n  type_in?: Maybe<Array<Scalars['String']>>;\n  firstPublicationDate?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  fulltext?: Maybe<Scalars['String']>;\n  similar?: Maybe<Similar>;\n  where?: Maybe<WhereArticle>;\n  before?: Maybe<Scalars['String']>;\n  after?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n}\n\n\nexport interface QueryAllSectionsArgs {\n  sortBy?: Maybe<SortSectiony>;\n  id?: Maybe<Scalars['String']>;\n  id_in?: Maybe<Array<Scalars['String']>>;\n  uid?: Maybe<Scalars['String']>;\n  uid_in?: Maybe<Array<Scalars['String']>>;\n  lang?: Maybe<Scalars['String']>;\n  tags?: Maybe<Array<Scalars['String']>>;\n  tags_in?: Maybe<Array<Scalars['String']>>;\n  type?: Maybe<Scalars['String']>;\n  type_in?: Maybe<Array<Scalars['String']>>;\n  firstPublicationDate?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  fulltext?: Maybe<Scalars['String']>;\n  similar?: Maybe<Similar>;\n  where?: Maybe<WhereSection>;\n  before?: Maybe<Scalars['String']>;\n  after?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n}\n\nexport interface RelatedDocument {\n   __typename: 'RelatedDocument';\n  /** The id of the document. */\n  id: Scalars['String'];\n  /** The uid of the document. */\n  uid?: Maybe<Scalars['String']>;\n  /** The type of the document. */\n  type: Scalars['String'];\n  /** The language of the document. */\n  lang: Scalars['String'];\n}\n\nexport interface Section  extends _Document, _Linkable {\n   __typename: 'Section';\n  section_title?: Maybe<Scalars['Json']>;\n  column?: Maybe<Scalars['String']>;\n  _meta: Meta;\n  _linkType?: Maybe<Scalars['String']>;\n}\n\n/** A connection to a list of items. */\nexport interface SectionConnectionConnection {\n   __typename: 'SectionConnectionConnection';\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SectionConnectionEdge>>>;\n  totalCount: Scalars['Long'];\n}\n\n/** An edge in a connection. */\nexport interface SectionConnectionEdge {\n   __typename: 'SectionConnectionEdge';\n  /** The item at the end of the edge. */\n  node: Section;\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n}\n\nexport interface Similar {\n  documentId: Scalars['String'];\n  max: Scalars['Int'];\n}\n\nexport enum SortArticley {\n  MetaFirstPublicationDateAsc = 'meta_firstPublicationDate_ASC',\n  MetaFirstPublicationDateDesc = 'meta_firstPublicationDate_DESC',\n  MetaLastPublicationDateAsc = 'meta_lastPublicationDate_ASC',\n  MetaLastPublicationDateDesc = 'meta_lastPublicationDate_DESC',\n  ArticleDateAsc = 'articleDate_ASC',\n  ArticleDateDesc = 'articleDate_DESC',\n  HighlightAsc = 'highlight_ASC',\n  HighlightDesc = 'highlight_DESC'\n}\n\nexport enum SortDocumentsBy {\n  MetaFirstPublicationDateAsc = 'meta_firstPublicationDate_ASC',\n  MetaFirstPublicationDateDesc = 'meta_firstPublicationDate_DESC',\n  MetaLastPublicationDateAsc = 'meta_lastPublicationDate_ASC',\n  MetaLastPublicationDateDesc = 'meta_lastPublicationDate_DESC'\n}\n\nexport enum SortHomey {\n  MetaFirstPublicationDateAsc = 'meta_firstPublicationDate_ASC',\n  MetaFirstPublicationDateDesc = 'meta_firstPublicationDate_DESC',\n  MetaLastPublicationDateAsc = 'meta_lastPublicationDate_ASC',\n  MetaLastPublicationDateDesc = 'meta_lastPublicationDate_DESC',\n  HomepageTitleAsc = 'homepageTitle_ASC',\n  HomepageTitleDesc = 'homepageTitle_DESC',\n  HeaderLeftTitleAsc = 'header_left_title_ASC',\n  HeaderLeftTitleDesc = 'header_left_title_DESC',\n  HeaderLeftRichTextAsc = 'header_left_rich_text_ASC',\n  HeaderLeftRichTextDesc = 'header_left_rich_text_DESC',\n  HeaderRightTitleAsc = 'header_right_title_ASC',\n  HeaderRightTitleDesc = 'header_right_title_DESC',\n  HeaderRightRichTextAsc = 'header_right_rich_text_ASC',\n  HeaderRightRichTextDesc = 'header_right_rich_text_DESC'\n}\n\nexport enum SortSectiony {\n  MetaFirstPublicationDateAsc = 'meta_firstPublicationDate_ASC',\n  MetaFirstPublicationDateDesc = 'meta_firstPublicationDate_DESC',\n  MetaLastPublicationDateAsc = 'meta_lastPublicationDate_ASC',\n  MetaLastPublicationDateDesc = 'meta_lastPublicationDate_DESC',\n  SectionTitleAsc = 'section_title_ASC',\n  SectionTitleDesc = 'section_title_DESC',\n  ColumnAsc = 'column_ASC',\n  ColumnDesc = 'column_DESC'\n}\n\nexport interface WhereArticle {\n  /** article-date */\n  articleDate?: Maybe<Scalars['Date']>;\n  /** article-date */\n  articleDate_before?: Maybe<Scalars['Date']>;\n  /** article-date */\n  articleDate_after?: Maybe<Scalars['Date']>;\n  highlight?: Maybe<Scalars['String']>;\n  highlight_fulltext?: Maybe<Scalars['String']>;\n  /** section */\n  section?: Maybe<Scalars['String']>;\n}\n\nexport interface WhereHome {\n  /** homepage-title */\n  homepageTitle_fulltext?: Maybe<Scalars['String']>;\n  /** header_left_title */\n  header_left_title_fulltext?: Maybe<Scalars['String']>;\n  /** header_left_rich_text */\n  header_left_rich_text_fulltext?: Maybe<Scalars['String']>;\n  /** header_right_title */\n  header_right_title_fulltext?: Maybe<Scalars['String']>;\n  /** header_right_rich_text */\n  header_right_rich_text_fulltext?: Maybe<Scalars['String']>;\n}\n\nexport interface WhereSection {\n  /** section_title */\n  section_title_fulltext?: Maybe<Scalars['String']>;\n  column?: Maybe<Scalars['String']>;\n  column_fulltext?: Maybe<Scalars['String']>;\n}\n\nexport type ArticlesQueryVariables = {\n  after?: Maybe<Scalars['String']>;\n};\n\n\nexport type ArticlesQuery = (\n  { __typename: 'Query' }\n  & { allArticles: (\n    { __typename: 'ArticleConnectionConnection' }\n    & { pageInfo: (\n      { __typename: 'PageInfo' }\n      & Pick<PageInfo, 'hasPreviousPage' | 'hasNextPage' | 'startCursor' | 'endCursor'>\n    ), edges?: Maybe<Array<Maybe<(\n      { __typename: 'ArticleConnectionEdge' }\n      & { node: (\n        { __typename: 'Article' }\n        & Pick<Article, 'articleDate' | 'highlight'>\n        & { body?: Maybe<Array<(\n          { __typename: 'ArticleBodyHtml' }\n          & Pick<ArticleBodyHtml, 'type'>\n          & { primary?: Maybe<(\n            { __typename: 'ArticleBodyHtmlPrimary' }\n            & Pick<ArticleBodyHtmlPrimary, 'html_rich_text'>\n          )> }\n        ) | (\n          { __typename: 'ArticleBodyVimeo' }\n          & Pick<ArticleBodyVimeo, 'type'>\n          & { primary?: Maybe<(\n            { __typename: 'ArticleBodyVimeoPrimary' }\n            & Pick<ArticleBodyVimeoPrimary, 'vimeo_embed' | 'vimeo_link_text' | 'vimeo_thumbnail_image'>\n          )> }\n        ) | (\n          { __typename: 'ArticleBodyYoutube' }\n          & Pick<ArticleBodyYoutube, 'type'>\n          & { primary?: Maybe<(\n            { __typename: 'ArticleBodyYoutubePrimary' }\n            & Pick<ArticleBodyYoutubePrimary, 'youtube_embed' | 'youtube_link_text' | 'youtube_thumbnail_image'>\n          )> }\n        ) | (\n          { __typename: 'ArticleBodySoundcloud' }\n          & Pick<ArticleBodySoundcloud, 'type'>\n          & { primary?: Maybe<(\n            { __typename: 'ArticleBodySoundcloudPrimary' }\n            & Pick<ArticleBodySoundcloudPrimary, 'soundcloud_embed'>\n          )> }\n        ) | (\n          { __typename: 'ArticleBodyImage' }\n          & Pick<ArticleBodyImage, 'type'>\n          & { primary?: Maybe<(\n            { __typename: 'ArticleBodyImagePrimary' }\n            & Pick<ArticleBodyImagePrimary, 'image_link_text' | 'image_file' | 'image_text_before' | 'image_text_below'>\n          )> }\n        ) | (\n          { __typename: 'ArticleBodyLink' }\n          & Pick<ArticleBodyLink, 'type'>\n          & { primary?: Maybe<(\n            { __typename: 'ArticleBodyLinkPrimary' }\n            & Pick<ArticleBodyLinkPrimary, 'link_text' | 'link_text_after' | 'link_text_before' | 'link_thumbnail'>\n            & { link_url?: Maybe<(\n              { __typename: 'Home' }\n              & Pick<Home, '_linkType'>\n            ) | (\n              { __typename: 'Article' }\n              & Pick<Article, '_linkType'>\n            ) | (\n              { __typename: 'Section' }\n              & Pick<Section, '_linkType'>\n            ) | (\n              { __typename: '_ExternalLink' }\n              & Pick<_ExternalLink, '_linkType'>\n            ) | (\n              { __typename: '_FileLink' }\n              & Pick<_FileLink, '_linkType'>\n            ) | (\n              { __typename: '_ImageLink' }\n              & Pick<_ImageLink, '_linkType'>\n            )> }\n          )> }\n        ) | { __typename: 'ArticleBodyBandcamp_part' }>>, _meta: (\n          { __typename: 'Meta' }\n          & Pick<Meta, 'id'>\n        ), section?: Maybe<{ __typename: 'Home' } | { __typename: 'Article' } | (\n          { __typename: 'Section' }\n          & { _meta: (\n            { __typename: 'Meta' }\n            & Pick<Meta, 'id'>\n          ) }\n        ) | { __typename: '_ExternalLink' } | { __typename: '_FileLink' } | { __typename: '_ImageLink' }> }\n      ) }\n    )>>> }\n  ) }\n);\n\nexport type HomeQueryVariables = {};\n\n\nexport type HomeQuery = (\n  { __typename: 'Query' }\n  & { allHomes: (\n    { __typename: 'HomeConnectionConnection' }\n    & { edges?: Maybe<Array<Maybe<(\n      { __typename: 'HomeConnectionEdge' }\n      & { node: (\n        { __typename: 'Home' }\n        & Pick<Home, 'homepageTitle' | 'header_left_rich_text' | 'header_left_title' | 'header_right_rich_text' | 'header_right_title'>\n        & { column1_sections?: Maybe<Array<(\n          { __typename: 'HomeColumn1_sections' }\n          & { section?: Maybe<{ __typename: 'Home' } | { __typename: 'Article' } | (\n            { __typename: 'Section' }\n            & Pick<Section, 'section_title'>\n            & { _meta: (\n              { __typename: 'Meta' }\n              & Pick<Meta, 'id'>\n            ) }\n          ) | { __typename: '_ExternalLink' } | { __typename: '_FileLink' } | { __typename: '_ImageLink' }> }\n        )>>, column2_sections?: Maybe<Array<(\n          { __typename: 'HomeColumn2_sections' }\n          & { section?: Maybe<{ __typename: 'Home' } | { __typename: 'Article' } | (\n            { __typename: 'Section' }\n            & Pick<Section, 'section_title'>\n            & { _meta: (\n              { __typename: 'Meta' }\n              & Pick<Meta, 'id'>\n            ) }\n          ) | { __typename: '_ExternalLink' } | { __typename: '_FileLink' } | { __typename: '_ImageLink' }> }\n        )>>, column3_sections?: Maybe<Array<(\n          { __typename: 'HomeColumn3_sections' }\n          & { section?: Maybe<{ __typename: 'Home' } | { __typename: 'Article' } | (\n            { __typename: 'Section' }\n            & Pick<Section, 'section_title'>\n            & { _meta: (\n              { __typename: 'Meta' }\n              & Pick<Meta, 'id'>\n            ) }\n          ) | { __typename: '_ExternalLink' } | { __typename: '_FileLink' } | { __typename: '_ImageLink' }> }\n        )>>, column4_sections?: Maybe<Array<(\n          { __typename: 'HomeColumn4_sections' }\n          & { section?: Maybe<{ __typename: 'Home' } | { __typename: 'Article' } | (\n            { __typename: 'Section' }\n            & Pick<Section, 'section_title'>\n            & { _meta: (\n              { __typename: 'Meta' }\n              & Pick<Meta, 'id'>\n            ) }\n          ) | { __typename: '_ExternalLink' } | { __typename: '_FileLink' } | { __typename: '_ImageLink' }> }\n        )>>, column5_sections?: Maybe<Array<(\n          { __typename: 'HomeColumn5_sections' }\n          & { section?: Maybe<{ __typename: 'Home' } | { __typename: 'Article' } | (\n            { __typename: 'Section' }\n            & Pick<Section, 'section_title'>\n            & { _meta: (\n              { __typename: 'Meta' }\n              & Pick<Meta, 'id'>\n            ) }\n          ) | { __typename: '_ExternalLink' } | { __typename: '_FileLink' } | { __typename: '_ImageLink' }> }\n        )>> }\n      ) }\n    )>>> }\n  ) }\n);\n\n\nexport const ArticlesDocument = gql`\n    query Articles($after: String) {\n  allArticles(after: $after) {\n    pageInfo {\n      hasPreviousPage\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        body {\n          ... on ArticleBodyHtml {\n            primary {\n              html_rich_text\n            }\n            type\n          }\n          ... on ArticleBodyVimeo {\n            primary {\n              vimeo_embed\n              vimeo_link_text\n              vimeo_thumbnail_image\n            }\n            type\n          }\n          ... on ArticleBodyYoutube {\n            primary {\n              youtube_embed\n              youtube_link_text\n              youtube_thumbnail_image\n            }\n            type\n          }\n          ... on ArticleBodySoundcloud {\n            primary {\n              soundcloud_embed\n            }\n            type\n          }\n          ... on ArticleBodyImage {\n            primary {\n              image_link_text\n              image_file\n              image_text_before\n              image_text_below\n            }\n            type\n          }\n          ... on ArticleBodyLink {\n            primary {\n              link_text\n              link_text_after\n              link_text_before\n              link_thumbnail\n              link_url {\n                _linkType\n              }\n            }\n            type\n          }\n        }\n        articleDate\n        _meta {\n          id\n        }\n        highlight\n        section {\n          ... on Section {\n            _meta {\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type ArticlesComponentProps = Omit<ApolloReactComponents.QueryComponentOptions<ArticlesQuery, ArticlesQueryVariables>, 'query'>;\n\n    export const ArticlesComponent = (props: ArticlesComponentProps) => (\n      <ApolloReactComponents.Query<ArticlesQuery, ArticlesQueryVariables> query={ArticlesDocument} {...props} />\n    );\n    \nexport type ArticlesProps<TChildProps = {}> = ApolloReactHoc.DataProps<ArticlesQuery, ArticlesQueryVariables> & TChildProps;\nexport function withArticles<TProps, TChildProps = {}>(operationOptions?: ApolloReactHoc.OperationOption<\n  TProps,\n  ArticlesQuery,\n  ArticlesQueryVariables,\n  ArticlesProps<TChildProps>>) {\n    return ApolloReactHoc.withQuery<TProps, ArticlesQuery, ArticlesQueryVariables, ArticlesProps<TChildProps>>(ArticlesDocument, {\n      alias: 'articles',\n      ...operationOptions\n    });\n};\nexport type ArticlesQueryResult = ApolloReactCommon.QueryResult<ArticlesQuery, ArticlesQueryVariables>;\nexport const HomeDocument = gql`\n    query Home {\n  allHomes {\n    edges {\n      node {\n        homepageTitle\n        header_left_rich_text\n        header_left_title\n        header_right_rich_text\n        header_right_title\n        column1_sections {\n          section {\n            ... on Section {\n              section_title\n              _meta {\n                id\n              }\n            }\n          }\n        }\n        column2_sections {\n          section {\n            ... on Section {\n              section_title\n              _meta {\n                id\n              }\n            }\n          }\n        }\n        column3_sections {\n          section {\n            ... on Section {\n              section_title\n              _meta {\n                id\n              }\n            }\n          }\n        }\n        column4_sections {\n          section {\n            ... on Section {\n              section_title\n              _meta {\n                id\n              }\n            }\n          }\n        }\n        column5_sections {\n          section {\n            ... on Section {\n              section_title\n              _meta {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type HomeComponentProps = Omit<ApolloReactComponents.QueryComponentOptions<HomeQuery, HomeQueryVariables>, 'query'>;\n\n    export const HomeComponent = (props: HomeComponentProps) => (\n      <ApolloReactComponents.Query<HomeQuery, HomeQueryVariables> query={HomeDocument} {...props} />\n    );\n    \nexport type HomeProps<TChildProps = {}> = ApolloReactHoc.DataProps<HomeQuery, HomeQueryVariables> & TChildProps;\nexport function withHome<TProps, TChildProps = {}>(operationOptions?: ApolloReactHoc.OperationOption<\n  TProps,\n  HomeQuery,\n  HomeQueryVariables,\n  HomeProps<TChildProps>>) {\n    return ApolloReactHoc.withQuery<TProps, HomeQuery, HomeQueryVariables, HomeProps<TChildProps>>(HomeDocument, {\n      alias: 'home',\n      ...operationOptions\n    });\n};\nexport type HomeQueryResult = ApolloReactCommon.QueryResult<HomeQuery, HomeQueryVariables>;","import React from 'react';\r\n\r\nimport Meta from \"../components/Meta\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Normalize } from 'styled-normalize';\r\nimport { GlobalStyle } from '../components/GlobalStyle';\r\nimport styled, { css } from 'styled-components';\r\nimport { mq } from '../styles/media';\r\n\r\nexport const HL = css`grid-area: hL;`;\r\nexport const HR = css`grid-area: hR;`;\r\nexport const HT = css`grid-area: hT;`;\r\nexport const HH = css`grid-area: hh;`;\r\nexport const C1 = css`grid-area: c1;`;\r\nexport const C2 = css`grid-area: c2;`;\r\nexport const C3 = css`grid-area: c3;`;\r\nexport const C4 = css`grid-area: c4;`;\r\nexport const C5 = css`grid-area: c5;`;\r\n\r\nconst Grid = styled.main`\r\n  \r\n\r\n  display: grid;\r\n\r\n  grid-template-areas:\r\n    \"hL hT hT hT hR\"\r\n    \"hh hh hh hh hh\"\r\n    \"c1 c2 c3 c4 c5\";\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-rows: 120px 3px;\r\n  \r\n  \r\n  ${mq.lt.md`\r\n    grid-template-areas:\r\n      \"hT hT\"\r\n      \"hL hR\"\r\n      \"hh hh\"\r\n      \"c1 c1\"\r\n      \"c2 c2\"\r\n      \"c3 c3\"\r\n      \"c4 c4\"\r\n      \"c5 c5\";\r\n      grid-template-columns: repeat(2, 1fr);\r\n      grid-template-rows: 120px 120px 3px repeat(5, 1fr);\r\n  `}\r\n    max-width: 960px;\r\n    min-height: 100%;\r\n    margin: 0px auto;\r\n    padding: 0;\r\n`;\r\n\r\n/**\r\n * Default layout component\r\n */\r\nconst DefaultLayout: React.FC = ({ children }) => (\r\n  <>\r\n    <Normalize />\r\n    <GlobalStyle />\r\n    <Meta />\r\n    <Grid> {children} </Grid>\r\n    <Footer />\r\n  </>\r\n);\r\n\r\nexport default DefaultLayout;\r\n","import * as React from 'react';\nimport { GetStaticProps } from 'next';\nimport { prismicClient } from '../utils/getPrismicClient';\nimport { HomeDocument, HomeQuery, HomeQueryVariables, Home, ArticlesQuery, ArticlesQueryVariables, ArticlesDocument, Article } from '../graphql/__generated__';\nimport DefaultLayout, { C1, C2, C3, C4, C5, HL, HR, HT, HH } from '../layouts';\nimport { getHeader } from '../utils/getHeader';\nimport { getColumnSections, getArticlesBySectionId } from '../utils/getColumnSections';\nimport { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { lt } from '../styles/media';\nimport { Header } from '../components/Header';\nimport { Title } from '../components/Title';\nimport { DashRow } from '../components/DashBox';\nimport ReactResizeDetector from \"react-resize-detector\";\nimport styled from 'styled-components';\nimport { Column } from '../components/Column';\nimport _ from 'lodash';\n\ninterface HomeProps {\n    home: Home;\n    articles: Article[];\n}\n\nconst Column1 = styled(Column)`${C1}`;\nconst Column2 = styled(Column)`${C2}`;\nconst Column3 = styled(Column)`${C3}`;\nconst Column4 = styled(Column)`${C4}`;\nconst Column5 = styled(Column)`${C5}`;\nconst HeaderLeft = styled(Header)`${HL}`;\nconst HeaderTitle = styled(Title)`${HT}`;\nconst HeaderRight = styled(Header)`${HR}`;\nconst Horizontal = styled(DashRow)`${HH}`;\n\nconst Index: React.SFC<HomeProps> = (props) => {\n    const { home, articles } = props;\n\n    const header = getHeader(home);\n\n    if (!header) return null;\n\n    const articlesBySectionId = getArticlesBySectionId(articles);\n    const column1Sections = getColumnSections(articlesBySectionId, home.column1_sections!);\n    const column2Sections = getColumnSections(articlesBySectionId, home.column2_sections!);\n    const column3Sections = getColumnSections(articlesBySectionId, home.column3_sections!);\n    const column4Sections = getColumnSections(articlesBySectionId, home.column4_sections!);\n    const column5Sections = getColumnSections(articlesBySectionId, home.column5_sections!);\n\n    const isMobile = useMediaQuery({\n        query: lt.md\n    })\n\n    const [c1Height, setC1Height] = useState(0);\n    const [c2Height, setC2Height] = useState(0);\n    const [c3Height, setC3Height] = useState(0);\n    const [c4Height, setC4Height] = useState(0);\n    const [c5Height, setC5Height] = useState(0);\n\n    return (\n        <DefaultLayout>\n            <HeaderLeft values={header.left} dash={{ right: c1Height >= c2Height }} />\n            <HeaderTitle values={header.title} dash={{\n                left: !isMobile && c2Height > c1Height,\n                bottom: isMobile,\n                right: c4Height >= c5Height && !isMobile\n            }} />\n            <HeaderRight values={header.right} dash={{ left: c5Height > c4Height }} />\n            <Horizontal dash={{ bottom: true }} />\n            <ReactResizeDetector handleHeight={true} querySelector={\"#column-1-content\"} onResize={(width, height) => setC1Height(height)} />\n            <ReactResizeDetector handleHeight={true} querySelector={\"#column-2-content\"} onResize={(width, height) => setC2Height(height)} />\n            <ReactResizeDetector handleHeight={true} querySelector={\"#column-3-content\"} onResize={(width, height) => setC3Height(height)} />\n            <ReactResizeDetector handleHeight={true} querySelector={\"#column-4-content\"} onResize={(width, height) => setC4Height(height)} />\n            <ReactResizeDetector handleHeight={true} querySelector={\"#column-5-content\"} onResize={(width, height) => setC5Height(height)} />\n            <Column1 contentId=\"column-1-content\" {...{ isMobile }} dash={{ top: false, right: c1Height >= c2Height && !isMobile }} values={column1Sections} />\n            <Column2 contentId=\"column-2-content\" {...{ isMobile }} dash={{ top: false, left: c2Height > c1Height, right: c2Height >= c3Height && !isMobile }} values={column2Sections} />\n            <Column3 contentId=\"column-3-content\" {...{ isMobile }} dash={{ top: false, left: c3Height > c2Height, right: c3Height >= c4Height && !isMobile }} values={column3Sections} />\n            <Column4 contentId=\"column-4-content\" {...{ isMobile }} dash={{ top: false, left: c4Height > c3Height, right: c4Height >= c5Height && !isMobile }} values={column4Sections} />\n            <Column5 contentId=\"column-5-content\" {...{ isMobile }} dash={{ top: false, left: c5Height > c4Height }} values={column5Sections} />\n        </DefaultLayout>\n    );\n}\n\nexport const getStaticProps: GetStaticProps<HomeProps> = async (context) => {\n\n    const { data: homeQuery } = await prismicClient.query<HomeQuery, HomeQueryVariables>({\n        query: HomeDocument,\n        fetchPolicy: 'no-cache',\n        context: context.previewData\n    });\n\n    const articlesQuery: ArticlesQuery = {} as ArticlesQuery;\n\n    do {\n        const last = articlesQuery.allArticles?.pageInfo?.endCursor;\n        const { data } = await prismicClient.query<ArticlesQuery, ArticlesQueryVariables>({\n            query: ArticlesDocument,\n            fetchPolicy: 'no-cache',\n            variables: {\n                after: last || ''\n            },\n            context: context.previewData\n        });\n\n        _.mergeWith(articlesQuery, data, (obj, src) => {\n            if (!(Array.isArray(obj) && Array.isArray(src))) return undefined;\n            return obj.concat(src);\n        });\n    } while (articlesQuery.allArticles.pageInfo.hasNextPage);\n\n    const props: HomeProps = {\n        home: homeQuery.allHomes?.edges?.[0]?.node as Home,\n        articles: (articlesQuery.allArticles.edges?.map(a => a?.node) || []) as Article[]\n    };\n\n    homeQuery.allHomes.edges\n\n    return {\n        props\n    };\n};\n\nexport default Index;","// -- Prismic API endpoint\r\n// Determines which repository to query and fetch data from\r\n// Configure your site's access point here\r\nexport const apiEndpoint = 'https://beaufort-asia.cdn.prismic.io/api'\r\nexport const graphqlEndpoint = 'https://beaufort-asia.cdn.prismic.io/graphql'\r\n\r\n// -- Access Token if the repository is not public\r\n// Generate a token in your dashboard and configure it here if your repository is private\r\nexport const accessToken = ''\r\n\r\n// -- Link resolution rules\r\n// Manages the url links to internal Prismic documents\r\nexport const linkResolver = (doc: any) => {\r\n  if (doc.type === 'post') {\r\n    return `/blog/${doc.uid}`\r\n  }\r\n  return '/'\r\n}\r\n\r\n// Additional helper function for Next/Link components\r\nexport const hrefResolver = (doc: any) => {\r\n  if (doc.type === 'post') {\r\n    return '/blog/[uid]'\r\n  }\r\n  return '/'\r\n}\r\n","import { css } from \"styled-components\";\nconst base = `/fonts`;\n\nconst LetterGothicEot = `${base}/LetterGothic/LetterGothicStdSlanted.eot`;\nconst LetterGothicSvg = `${base}/LetterGothic/LetterGothicStdSlanted.svg`;\nconst LetterGothicTtf = `${base}/LetterGothic/LetterGothicStdSlanted.ttf`;\nconst LetterGothicWoff = `${base}/LetterGothic/LetterGothicStdSlanted.woff`;\nconst EditionEot = `${base}/Edition/edition_-webfont.eot`;\nconst EditionSvg = `${base}/Edition/edition_-webfont.svg`;\nconst EditionTtf = `${base}/Edition/edition_-webfont.ttf`;\nconst EditionWoff = `${base}/Edition/edition_-webfont.woff`;\nconst LucidaConsoleEot = `${base}/LucidaConsole/LucidaConsole.eot`;\nconst LucidaConsoleSvg = `${base}/LucidaConsole/LucidaConsole.svg`;\nconst LucidaConsoleTtf = `${base}/LucidaConsole/LucidaConsole.ttf`;\nconst LucidaConsoleWoff = `${base}/LucidaConsole/LucidaConsole.woff`;\n\nexport const fonts = css`\n    @font-face {\n    font-family: 'LetterGothicSlanted';\n\tsrc: url('${LetterGothicEot}');\n    src: url('${LetterGothicEot}#iefix') format('embedded-opentype'),\n         url('${LetterGothicWoff}') format('woff'),\n         url('${LetterGothicTtf}') format('truetype'),\n         url('${LetterGothicSvg}#LetterGothicSlanted') format('svg');     \n}\n\n@font-face {\n    font-family: 'EditionRegular';\n    src: url('${EditionEot}');\n    src: url('${EditionEot}#iefix') format('embedded-opentype'),\n         url('${EditionWoff}') format('woff'),\n         url('${EditionTtf}') format('truetype'),\n         url('${EditionSvg}#EditionRegular') format('svg');    \n}\n\n@font-face {\n    font-family: 'LucidaConsole';\n    src: url('${LucidaConsoleEot}');\n    src: url('${LucidaConsoleEot}#iefix') format('embedded-opentype'),\n         url('${LucidaConsoleWoff}') format('woff'),\n         url('${LucidaConsoleTtf}') format('truetype'),\n         url('${LucidaConsoleSvg}#LucidaConsole') format('svg');\n}\n`","import { css } from \"styled-components\";\n\nconst bp = {\n    xs: 0,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200\n}\n\nexport type Breakpoint = keyof typeof bp;\n\nconst em = (bp: number) => `${bp / 16}em`;\nconst minw = (bp: number) => `(min-width: ${em(bp)})`;\nconst maxw = (bp: number) => `(max-width: ${em(bp)})`;\n\nexport const gt = {\n    xs: minw(bp.sm + 1),\n    sm: minw(bp.md + 1),\n    md: minw(bp.lg + 1),\n    lg: minw(bp.xl + 1),\n};\n\ntype GtQueries = {\n    [P in keyof typeof gt]: typeof css;\n}\n\nexport const lt = {\n    sm: maxw(bp.sm),\n    md: maxw(bp.md),\n    lg: maxw(bp.lg),\n    xl: maxw(bp.xl),\n};\n\ntype LtQueries = {\n    [P in keyof typeof lt]: typeof css;\n}\n\nexport const is = {\n    xs: lt.sm,\n    sm: `${gt.xs} and ${lt.md}`,\n    md: `${gt.sm} and ${lt.lg}`,\n    lg: `${gt.md} and ${lt.xl}`,\n    xl: gt.lg,\n};\n\ntype IsQueries = {\n    [P in keyof typeof is]: typeof css;\n}\n\nconst build = (queries: { [key: string]: string }) => Object.keys(queries).reduce((acc, label) => {\n    acc[label] = (strings: TemplateStringsArray, ...interpolations: any[]) => css`\n    @media ${(queries)[label]} {\n      ${css(strings, ...interpolations)}\n    }\n  `;\n    return acc;\n}, {} as any);\n\ntype MediaQueries = IsQueries & { gt: GtQueries, lt: LtQueries }\n\nexport const mq: MediaQueries = {\n    ...build(is),\n    gt: build(gt),\n    lt: build(lt)\n}","import { css } from \"styled-components\";\n\nexport const typography = css`\n\n    h1 {\n        font-family: EditionRegular;\n        font-size: 120px;\n        letter-spacing: 25px;\n        font-weight: 400;\n        text-transform: uppercase;\n        margin: 0;\n    }\n\n    h2 {\n        font-family: LetterGothicSlanted, LucidaConsole;\n        font-size: 25px;\n        letter-spacing: -3px;\n        text-transform: uppercase;\n        margin: 0;\n        font-weight: 400;\n    }\n\n    h3 {\n        font-family: LucidaConsole;\n        font-size: 12px;\n\t    text-transform: uppercase;\t\n        letter-spacing: -1;\n        font-weight: 400;\n    }\n\n    h4, h5, h6, body {\n        font-family: LucidaConsole;\n        font-size: 10px;\t\n        letter-spacing: -1;\n        font-weight: 400;\n    }\n\n`;","// import { HomeQuery, HomeQuery_prismic_allArticles_edges_node_section_PRISMIC_Section, HomeQuery_prismic_allHomes_edges_node_column1_sections, HomeQuery_prismic_allArticles_edges, HomeQuery_prismic_allHomes_edges_node_column2_sections, HomeQuery_prismic_allHomes_edges_node_column3_sections, HomeQuery_prismic_allHomes_edges_node_column4_sections, HomeQuery_prismic_allHomes_edges_node_column5_sections } from \"../templates/home/HomeQuery\";\nimport { ISection, IArticle, IHtmlSlice, IVimeoSlice, ILinkSlice, IImageSlice } from \"../types/models\";\nimport { HomeQuery, ArticlesQuery, Article, Section, HomeColumn1_Sections, HomeColumn2_Sections, HomeColumn3_Sections, HomeColumn4_Sections, HomeColumn5_Sections } from \"../graphql/__generated__\";\n\nconst fromYesNo = (str: string | undefined | null) => {\n    if (!str) return false;\n    return str.toLowerCase() === \"yes\";\n}\nexport type ArticlesBySectionId = { [sectionId: string]: Article[] };\n\nexport const getArticlesBySectionId = (articles: Article[]) => {\n    const articlesBySectionId = articles.reduce((acc, article) => {\n        if (!article) return acc;\n        const sectionLink = article.section;\n        if (sectionLink === null || sectionLink === undefined) {\n            console.log(`'section'  not set on Article: `, article);\n            return acc;\n        }\n        const section = sectionLink as Section;\n        const sectionId = section._meta.id;\n        acc[sectionId] = [...acc[sectionId] || [], article];\n        return acc;\n    }, {} as Record<string, any[]>) || {};\n    return articlesBySectionId as ArticlesBySectionId;\n}\nexport type ColumnSection = HomeColumn1_Sections | HomeColumn2_Sections | HomeColumn3_Sections | HomeColumn4_Sections | HomeColumn5_Sections;\n\nexport const exists = <T>(value: T | undefined | null): value is T => !!value;\n\nexport const getColumnSections = (articlesBySectionId: ArticlesBySectionId, columnSections: ColumnSection[]): ISection[] => {\n    return columnSections\n        .map(columnSection => columnSection.section)\n        .filter(exists)\n        .map((section: any) => {\n            return {\n                id: section._meta.id,\n                title: section.section_title,\n                articles: (articlesBySectionId[section._meta.id] || [] as Array<IArticle>)\n                    .map(article => {\n                        const art: IArticle = {\n                            id: article._meta.id,\n                            date: new Date(article.articleDate),\n                            highlight: fromYesNo(article.highlight),\n                            slices: article.body?.map(slice => {\n\n                                const { primary, type } = slice;\n                                switch (type) {\n\n                                    case (\"html\"): {\n                                        const { html_rich_text } = primary as any;\n                                        const htmlSlice: IHtmlSlice = {\n                                            type: \"html\",\n                                            html_rich_text\n                                        }\n                                        return htmlSlice;\n                                    }\n                                    case (\"vimeo\"): {\n                                        const { vimeo_link_text, vimeo_embed, vimeo_thumbnail_image } = primary as any;\n                                        const vimeoSlice: IVimeoSlice = {\n                                            type: \"vimeo\",\n                                            vimeo_embed,\n                                            vimeo_link_text,\n                                            vimeo_thumbnail_image\n                                        }\n                                        return vimeoSlice;\n                                    }\n\n                                    case (\"link\"): {\n                                        const { link_text_before, link_text, link_url, link_thumbnail, link_text_after } = primary as any;\n                                        const linkSlice: ILinkSlice = {\n                                            type: \"link\",\n                                            link_text_before,\n                                            link_text,\n                                            link_url,\n                                            link_thumbnail,\n                                            link_text_after\n                                        }\n                                        return linkSlice;\n                                    }\n\n                                    case (\"bandcamp\"): {\n                                        const { link_text_before, link_text, link_url, link_thumbnail, link_text_after } = primary as any;\n                                        const linkSlice: ILinkSlice = {\n                                            type: \"link\",\n                                            link_text_before,\n                                            link_text,\n                                            link_url,\n                                            link_thumbnail,\n                                            link_text_after\n                                        }\n                                        return linkSlice;\n                                    }\n\n                                    case (\"image\"): {\n                                        const { image_file,\n                                            image_link_text,\n                                            image_text_after,\n                                            image_text_before } = primary as any;\n                                        const linkSlice: IImageSlice = {\n                                            type: \"image\",\n                                            image_file,\n                                            image_link_text,\n                                            image_text_after,\n                                            image_text_before\n                                        }\n                                        return linkSlice;\n                                    }\n\n                                    default: throw \"Unrecognised slice type: \" + type;\n                                }\n                            }).filter(s => !!s) as any || []\n                        }\n                        return art;\n\n                    }) || []\n            }\n        });\n}\n\n// export const getColumnSections = (data: HomeQuery, column: number): ISection[] =>\n//     data.prismic.allSections!.edges!.map(edge => edge!.node!)\n//         .filter(section => section.column === column.toString())\n//         .map(section => {\n//             return {\n//                 title: section.section_title,\n//                 articles: section.section_articles?.filter(sa => !!sa.section_article)\n//                     .map(sa => sa.section_article)\n//                     .map(link => (link as any)._meta.id)\n//                     .map(id => data.prismic.allArticles.edges?.find(article => article?.node._meta.id === id))\n//                     .map(article => {\n//                         const node = article!.node;\n//                         console.log(node);\n//                         const art: IArticle = {\n//                             date: new Date(node.articleDate),\n//                             highlight: fromYesNo(node.highlight),\n//                             slices: node.body?.map(slice => {\n\n//                                 const { primary, type } = slice;\n//                                 console.log(primary);\n//                                 switch (type) {\n\n//                                     case (\"html\"): {\n//                                         const { html_rich_text } = primary as any;\n//                                         const htmlSlice: IHtmlSlice = {\n//                                             type: \"html\",\n//                                             html_rich_text\n//                                         }\n//                                         return htmlSlice;\n//                                     }\n//                                     default: throw \"Unrecognised slice type: \" + type;\n//                                 }\n//                             }).filter(s => !!s) as any || []\n//                         }\n//                         return art;\n\n//                     }) || []\n//             }\n//         });","\nimport { IHeader } from \"../types/models\";\nimport { HomeQuery, Home } from \"../graphql/__generated__\";\n\nexport const getHeader = (home: Home) => {\n\n    if (!home) return undefined;\n\n    const { homepageTitle, header_left_title, header_left_rich_text, header_right_title, header_right_rich_text } = home;\n\n    const header: IHeader = {\n        title: homepageTitle,\n        left: {\n            title: header_left_title,\n            body: header_left_rich_text\n        },\n        right: {\n            title: header_right_title,\n            body: header_right_rich_text\n        }\n    }\n\n    return header;\n}","import { graphqlEndpoint as uri } from '../prismic-configuration';\nimport { PrismicLink } from 'apollo-link-prismic';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst link = new PrismicLink({ uri });\n\nexport const prismicClient = new ApolloClient({ link, cache: new InMemoryCache() });\n","import React from \"react\";\nimport { RichText } from \"prismic-reactjs\";\nimport { linkResolver } from \"../prismic-configuration\";\n\n\nexport const richText = (rich_text_field: any) => <RichText linkResolver={linkResolver} render={rich_text_field} />\n","module.exports = require(\"@apollo/react-components\");","module.exports = require(\"@apollo/react-hoc\");","module.exports = require(\"apollo-cache-inmemory\");","module.exports = require(\"apollo-client\");","module.exports = require(\"apollo-link-prismic\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"lodash\");","module.exports = require(\"next/head\");","module.exports = require(\"prismic-reactjs\");","module.exports = require(\"react\");","module.exports = require(\"react-resize-detector\");","module.exports = require(\"react-responsive\");","module.exports = require(\"styled-components\");","module.exports = require(\"styled-normalize\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxiDA;AAEA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AAgBA;AAWA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AATA;AAaA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AADA;AAAA;AACA;AACA;AADA;AAAA;AACA;AACA;AADA;AAAA;AACA;AACA;AADA;AAAA;AAGA;AACA;AADA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AAIA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACzFA;AACA;AAEA;;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AAEA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AAEA;;;;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC9BA;AAMA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;ACzBA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;AAEA;;;;;;AAMA;AACA;;;;;;;;;;;;;;AA/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AACA;AAscA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA6MA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAiFA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AACA;AADA;AAIA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAmEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AACA;AADA;AAIA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC72BA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAAA;AAgCA;;;;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AANA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AADA;AAGA;AAEA;;;;;;;;;;;;ACxHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AASA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAWA;AACA;AACA;AAIA;AACA;AACA;AAGA;AAEA;AACA;AAHA;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAAA;AA9DA;AAgEA;AAvEA;AAyEA;AAEA;AAhFA;AAkFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;ACzJA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AANA;AAYA;AACA;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}