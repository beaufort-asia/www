{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Footer.tsx","webpack:///./components/Meta.tsx","webpack:///./getPrismicClient.ts","webpack:///./graphql/__generated__/components.tsx","webpack:///./layouts/index.tsx","webpack:///./pages/index.tsx","webpack:///./prismic-configuration.ts","webpack:///./utils/richText.tsx","webpack:///external \"@apollo/react-components\"","webpack:///external \"@apollo/react-hoc\"","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"apollo-client\"","webpack:///external \"apollo-link-prismic\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/head\"","webpack:///external \"prismic-reactjs\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from 'react'\r\n// import { footerStyles } from 'styles'\r\n\r\n/**\r\n * Site footer component\r\n */\r\nconst Footer = () => (\r\n  <footer>\r\n    <p>\r\n      Proudly published with &nbsp;\r\n      <a\r\n        href=\"https://prismic.io\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Prismic\r\n      </a>\r\n    </p>\r\n    {/* <style jsx global>{footerStyles}</style> */}\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","import { Fragment } from 'react'\r\nimport Head from 'next/head'\r\nimport { apiEndpoint } from '../prismic-configuration'\r\n// import { reset, globals } from 'styles'\r\n\r\n/**\r\n * Meta data component\r\n */\r\nconst Meta = () => {\r\n  const repoNameArray = /([^\\/]+)\\.cdn.prismic\\.io\\/api/.exec(apiEndpoint);\r\n  const repoName = repoNameArray?.[1];\r\n\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <meta charSet=\"utf-8\" />\r\n        <link href=\"https://fonts.googleapis.com/css?family=Lato:300,400,700,900\" rel=\"stylesheet\" />\r\n        <link rel=\"icon\" href=\"/favicon.png\" type=\"image/png\" />\r\n        <script async defer src={`//static.cdn.prismic.io/prismic.js?repo=${repoName}&new=true`} />\r\n        <script lang=\"javascript\" dangerouslySetInnerHTML={{\r\n          __html: `\r\n\r\n          (function checkPreviewCookies() {\r\n\r\n            function getCookieValue(key) {              \r\n              const cookieMatcher = new RegExp(\"(?:(?:^|.*;\\\\\\\\s*)\" + key + \"\\\\\\\\s*\\\\\\\\=\\\\\\\\s*([^;]*).*$)|^.*$\");\r\n              return document.cookie.replace(cookieMatcher, \\\"$1\\\");\r\n            }\r\n            \r\n            const previewCookieValue = getCookieValue(\"io.prismic.preview\");\r\n            // console.log('value', previewCookieValue);\r\n            const decodedCookieValue = decodeURIComponent(previewCookieValue);\r\n            // console.log('decoded', decodedCookieValue);\r\n            const prismic = decodedCookieValue !== \"\" ? JSON.parse(decodedCookieValue) : {};\r\n            // console.log('prismic object', prismic);\r\n            const previewKey = \"${repoName}.prismic.io\";\r\n                               \r\n            const isEntering = getCookieValue(\"expectPrismicPreview\") === \"entering\";\r\n            const isEntered = getCookieValue(\"expectPrismicPreview\") === \"entered\";\r\n            const hasPrismicPreview = !!prismic[previewKey] && !!prismic[previewKey].preview;\r\n            \r\n            if (hasPrismicPreview) {\r\n              if (isEntering) {\r\n                console.log('Entered prismic preview mode...');\r\n                // Set entered in cookie here.\r\n                document.cookie = \"expectPrismicPreview=entered; path=/\";\r\n              }\r\n              else if (isEntered) {\r\n                console.log('Currently in prismic preview mode...');\r\n              }\r\n              else {\r\n                console.log('Nextjs preview was deactivated by the user or expired, but prismic preview is still activated.');\r\n                // Re-activate preview mode in nextjs api.\r\n                const previewToken = prismic[previewKey].preview;\r\n                // console.log('token', previewToken);\r\n                window.location.replace('/api/preview?token='+encodeURIComponent(previewToken));\r\n              }\r\n            }\r\n            else {\r\n              if (isEntering) {\r\n                console.log('Waiting to enter prismic preview mode...');                \r\n              }\r\n              else if (isEntered) {\r\n                console.log('Prismic preview was deactivated by the user or expired, but nextjs preview is still activated.');\r\n                // Deactivate nextjs preview by calling /api/preview-clear.\r\n                window.location.replace('/api/preview-clear');\r\n              }\r\n              else {\r\n                // console.log('In static viewing mode.');\r\n                // Do nothing.\r\n              }\r\n            }\r\n          })();\r\n          \r\n          `\r\n        }} />\r\n      </Head>\r\n      {/* <style jsx global > {reset} </style>\r\n      <style jsx global > {globals} </style> */}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Meta\r\n","import { graphqlEndpoint as uri } from './prismic-configuration';\nimport { PrismicLink } from 'apollo-link-prismic';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst link = new PrismicLink({ uri });\n\nexport const prismicClient = new ApolloClient({ link, cache: new InMemoryCache() });\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactComponents from '@apollo/react-components';\nimport * as ApolloReactHoc from '@apollo/react-hoc';\nexport type Maybe<T> = T | null;\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  DateTime: any;\n  Long: any;\n  Json: any;\n  Date: any;\n};\n\n/** A prismic document */\nexport type _Document = {\n  _meta: Meta;\n};\n\n/** A connection to a list of items. */\nexport type _DocumentConnection = {\n   __typename?: '_DocumentConnection';\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<_DocumentEdge>>>;\n  totalCount: Scalars['Long'];\n};\n\n/** An edge in a connection. */\nexport type _DocumentEdge = {\n   __typename?: '_DocumentEdge';\n  /** The item at the end of the edge. */\n  node: _Document;\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n};\n\n/** An external link */\nexport type _ExternalLink = _Linkable & {\n   __typename?: '_ExternalLink';\n  url: Scalars['String'];\n  _linkType?: Maybe<Scalars['String']>;\n};\n\n/** A linked file */\nexport type _FileLink = _Linkable & {\n   __typename?: '_FileLink';\n  name: Scalars['String'];\n  url: Scalars['String'];\n  size: Scalars['Long'];\n  _linkType?: Maybe<Scalars['String']>;\n};\n\n/** A linked image */\nexport type _ImageLink = _Linkable & {\n   __typename?: '_ImageLink';\n  name: Scalars['String'];\n  url: Scalars['String'];\n  size: Scalars['Long'];\n  height: Scalars['Int'];\n  width: Scalars['Int'];\n  _linkType?: Maybe<Scalars['String']>;\n};\n\n/** A prismic link */\nexport type _Linkable = {\n  _linkType?: Maybe<Scalars['String']>;\n};\n\nexport type Article = _Document & _Linkable & {\n   __typename?: 'Article';\n  articleDate?: Maybe<Scalars['Date']>;\n  highlight?: Maybe<Scalars['String']>;\n  section?: Maybe<_Linkable>;\n  body?: Maybe<Array<ArticleBody>>;\n  _meta: Meta;\n  _linkType?: Maybe<Scalars['String']>;\n};\n\nexport type ArticleBody = ArticleBodyHtml | ArticleBodyVimeo | ArticleBodyYoutube | ArticleBodySoundcloud | ArticleBodyImage | ArticleBodyLink;\n\nexport type ArticleBodyHtml = {\n   __typename?: 'ArticleBodyHtml';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodyHtmlPrimary>;\n};\n\nexport type ArticleBodyHtmlPrimary = {\n   __typename?: 'ArticleBodyHtmlPrimary';\n  html_rich_text?: Maybe<Scalars['Json']>;\n};\n\nexport type ArticleBodyImage = {\n   __typename?: 'ArticleBodyImage';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodyImagePrimary>;\n};\n\nexport type ArticleBodyImagePrimary = {\n   __typename?: 'ArticleBodyImagePrimary';\n  image_text_before?: Maybe<Scalars['Json']>;\n  image_link_text?: Maybe<Scalars['Json']>;\n  image_file?: Maybe<Scalars['Json']>;\n  image_text_below?: Maybe<Scalars['Json']>;\n};\n\nexport type ArticleBodyLink = {\n   __typename?: 'ArticleBodyLink';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodyLinkPrimary>;\n};\n\nexport type ArticleBodyLinkPrimary = {\n   __typename?: 'ArticleBodyLinkPrimary';\n  link_text_before?: Maybe<Scalars['Json']>;\n  link_text?: Maybe<Scalars['Json']>;\n  link_url?: Maybe<_Linkable>;\n  link_thumbnail?: Maybe<Scalars['Json']>;\n  link_text_after?: Maybe<Scalars['Json']>;\n};\n\nexport type ArticleBodySoundcloud = {\n   __typename?: 'ArticleBodySoundcloud';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodySoundcloudPrimary>;\n};\n\nexport type ArticleBodySoundcloudPrimary = {\n   __typename?: 'ArticleBodySoundcloudPrimary';\n  soundcloud_embed?: Maybe<Scalars['Json']>;\n};\n\nexport type ArticleBodyVimeo = {\n   __typename?: 'ArticleBodyVimeo';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodyVimeoPrimary>;\n};\n\nexport type ArticleBodyVimeoPrimary = {\n   __typename?: 'ArticleBodyVimeoPrimary';\n  vimeo_link_text?: Maybe<Scalars['Json']>;\n  vimeo_embed?: Maybe<Scalars['Json']>;\n  vimeo_thumbnail_image?: Maybe<Scalars['Json']>;\n};\n\nexport type ArticleBodyYoutube = {\n   __typename?: 'ArticleBodyYoutube';\n  type?: Maybe<Scalars['String']>;\n  label?: Maybe<Scalars['String']>;\n  primary?: Maybe<ArticleBodyYoutubePrimary>;\n};\n\nexport type ArticleBodyYoutubePrimary = {\n   __typename?: 'ArticleBodyYoutubePrimary';\n  youtube_link_text?: Maybe<Scalars['Json']>;\n  youtube_embed?: Maybe<Scalars['Json']>;\n  youtube_thumbnail_image?: Maybe<Scalars['Json']>;\n};\n\n/** A connection to a list of items. */\nexport type ArticleConnectionConnection = {\n   __typename?: 'ArticleConnectionConnection';\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<ArticleConnectionEdge>>>;\n  totalCount: Scalars['Long'];\n};\n\n/** An edge in a connection. */\nexport type ArticleConnectionEdge = {\n   __typename?: 'ArticleConnectionEdge';\n  /** The item at the end of the edge. */\n  node: Article;\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n};\n\n\n\nexport type Home = _Document & _Linkable & {\n   __typename?: 'Home';\n  homepageTitle?: Maybe<Scalars['Json']>;\n  header_left_title?: Maybe<Scalars['Json']>;\n  header_left_rich_text?: Maybe<Scalars['Json']>;\n  column1_sections?: Maybe<Array<HomeColumn1_Sections>>;\n  column2_sections?: Maybe<Array<HomeColumn2_Sections>>;\n  column3_sections?: Maybe<Array<HomeColumn3_Sections>>;\n  column4_sections?: Maybe<Array<HomeColumn4_Sections>>;\n  column5_sections?: Maybe<Array<HomeColumn5_Sections>>;\n  header_right_title?: Maybe<Scalars['Json']>;\n  header_right_rich_text?: Maybe<Scalars['Json']>;\n  _meta: Meta;\n  _linkType?: Maybe<Scalars['String']>;\n};\n\nexport type HomeColumn1_Sections = {\n   __typename?: 'HomeColumn1_sections';\n  section?: Maybe<_Linkable>;\n};\n\nexport type HomeColumn2_Sections = {\n   __typename?: 'HomeColumn2_sections';\n  section?: Maybe<_Linkable>;\n};\n\nexport type HomeColumn3_Sections = {\n   __typename?: 'HomeColumn3_sections';\n  section?: Maybe<_Linkable>;\n};\n\nexport type HomeColumn4_Sections = {\n   __typename?: 'HomeColumn4_sections';\n  section?: Maybe<_Linkable>;\n};\n\nexport type HomeColumn5_Sections = {\n   __typename?: 'HomeColumn5_sections';\n  section?: Maybe<_Linkable>;\n};\n\n/** A connection to a list of items. */\nexport type HomeConnectionConnection = {\n   __typename?: 'HomeConnectionConnection';\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<HomeConnectionEdge>>>;\n  totalCount: Scalars['Long'];\n};\n\n/** An edge in a connection. */\nexport type HomeConnectionEdge = {\n   __typename?: 'HomeConnectionEdge';\n  /** The item at the end of the edge. */\n  node: Home;\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n};\n\n\n\nexport type Meta = {\n   __typename?: 'Meta';\n  /** The id of the document. */\n  id: Scalars['String'];\n  /** The uid of the document. */\n  uid?: Maybe<Scalars['String']>;\n  /** The type of the document. */\n  type: Scalars['String'];\n  /** The tags of the document. */\n  tags: Array<Scalars['String']>;\n  /** The language of the document. */\n  lang: Scalars['String'];\n  /** Alternate languages the document. */\n  alternateLanguages: Array<RelatedDocument>;\n  /** The first publication date of the document. */\n  firstPublicationDate?: Maybe<Scalars['DateTime']>;\n  /** The last publication date of the document. */\n  lastPublicationDate?: Maybe<Scalars['DateTime']>;\n};\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n   __typename?: 'PageInfo';\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n};\n\nexport type Query = {\n   __typename?: 'Query';\n  _allDocuments: _DocumentConnection;\n  allHomes: HomeConnectionConnection;\n  allArticles: ArticleConnectionConnection;\n  allSections: SectionConnectionConnection;\n};\n\n\nexport type Query_AllDocumentsArgs = {\n  sortBy?: Maybe<SortDocumentsBy>;\n  id?: Maybe<Scalars['String']>;\n  id_in?: Maybe<Array<Scalars['String']>>;\n  uid?: Maybe<Scalars['String']>;\n  uid_in?: Maybe<Array<Scalars['String']>>;\n  lang?: Maybe<Scalars['String']>;\n  tags?: Maybe<Array<Scalars['String']>>;\n  tags_in?: Maybe<Array<Scalars['String']>>;\n  type?: Maybe<Scalars['String']>;\n  type_in?: Maybe<Array<Scalars['String']>>;\n  firstPublicationDate?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  fulltext?: Maybe<Scalars['String']>;\n  similar?: Maybe<Similar>;\n  before?: Maybe<Scalars['String']>;\n  after?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryAllHomesArgs = {\n  sortBy?: Maybe<SortHomey>;\n  id?: Maybe<Scalars['String']>;\n  id_in?: Maybe<Array<Scalars['String']>>;\n  uid?: Maybe<Scalars['String']>;\n  uid_in?: Maybe<Array<Scalars['String']>>;\n  lang?: Maybe<Scalars['String']>;\n  tags?: Maybe<Array<Scalars['String']>>;\n  tags_in?: Maybe<Array<Scalars['String']>>;\n  type?: Maybe<Scalars['String']>;\n  type_in?: Maybe<Array<Scalars['String']>>;\n  firstPublicationDate?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  fulltext?: Maybe<Scalars['String']>;\n  similar?: Maybe<Similar>;\n  where?: Maybe<WhereHome>;\n  before?: Maybe<Scalars['String']>;\n  after?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryAllArticlesArgs = {\n  sortBy?: Maybe<SortArticley>;\n  id?: Maybe<Scalars['String']>;\n  id_in?: Maybe<Array<Scalars['String']>>;\n  uid?: Maybe<Scalars['String']>;\n  uid_in?: Maybe<Array<Scalars['String']>>;\n  lang?: Maybe<Scalars['String']>;\n  tags?: Maybe<Array<Scalars['String']>>;\n  tags_in?: Maybe<Array<Scalars['String']>>;\n  type?: Maybe<Scalars['String']>;\n  type_in?: Maybe<Array<Scalars['String']>>;\n  firstPublicationDate?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  fulltext?: Maybe<Scalars['String']>;\n  similar?: Maybe<Similar>;\n  where?: Maybe<WhereArticle>;\n  before?: Maybe<Scalars['String']>;\n  after?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryAllSectionsArgs = {\n  sortBy?: Maybe<SortSectiony>;\n  id?: Maybe<Scalars['String']>;\n  id_in?: Maybe<Array<Scalars['String']>>;\n  uid?: Maybe<Scalars['String']>;\n  uid_in?: Maybe<Array<Scalars['String']>>;\n  lang?: Maybe<Scalars['String']>;\n  tags?: Maybe<Array<Scalars['String']>>;\n  tags_in?: Maybe<Array<Scalars['String']>>;\n  type?: Maybe<Scalars['String']>;\n  type_in?: Maybe<Array<Scalars['String']>>;\n  firstPublicationDate?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  firstPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_after?: Maybe<Scalars['DateTime']>;\n  lastPublicationDate_before?: Maybe<Scalars['DateTime']>;\n  fulltext?: Maybe<Scalars['String']>;\n  similar?: Maybe<Similar>;\n  where?: Maybe<WhereSection>;\n  before?: Maybe<Scalars['String']>;\n  after?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\nexport type RelatedDocument = {\n   __typename?: 'RelatedDocument';\n  /** The id of the document. */\n  id: Scalars['String'];\n  /** The uid of the document. */\n  uid?: Maybe<Scalars['String']>;\n  /** The type of the document. */\n  type: Scalars['String'];\n  /** The language of the document. */\n  lang: Scalars['String'];\n};\n\nexport type Section = _Document & _Linkable & {\n   __typename?: 'Section';\n  section_title?: Maybe<Scalars['Json']>;\n  column?: Maybe<Scalars['String']>;\n  _meta: Meta;\n  _linkType?: Maybe<Scalars['String']>;\n};\n\n/** A connection to a list of items. */\nexport type SectionConnectionConnection = {\n   __typename?: 'SectionConnectionConnection';\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SectionConnectionEdge>>>;\n  totalCount: Scalars['Long'];\n};\n\n/** An edge in a connection. */\nexport type SectionConnectionEdge = {\n   __typename?: 'SectionConnectionEdge';\n  /** The item at the end of the edge. */\n  node: Section;\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n};\n\nexport type Similar = {\n  documentId: Scalars['String'];\n  max: Scalars['Int'];\n};\n\nexport enum SortArticley {\n  MetaFirstPublicationDateAsc = 'meta_firstPublicationDate_ASC',\n  MetaFirstPublicationDateDesc = 'meta_firstPublicationDate_DESC',\n  MetaLastPublicationDateAsc = 'meta_lastPublicationDate_ASC',\n  MetaLastPublicationDateDesc = 'meta_lastPublicationDate_DESC',\n  ArticleDateAsc = 'articleDate_ASC',\n  ArticleDateDesc = 'articleDate_DESC',\n  HighlightAsc = 'highlight_ASC',\n  HighlightDesc = 'highlight_DESC'\n}\n\nexport enum SortDocumentsBy {\n  MetaFirstPublicationDateAsc = 'meta_firstPublicationDate_ASC',\n  MetaFirstPublicationDateDesc = 'meta_firstPublicationDate_DESC',\n  MetaLastPublicationDateAsc = 'meta_lastPublicationDate_ASC',\n  MetaLastPublicationDateDesc = 'meta_lastPublicationDate_DESC'\n}\n\nexport enum SortHomey {\n  MetaFirstPublicationDateAsc = 'meta_firstPublicationDate_ASC',\n  MetaFirstPublicationDateDesc = 'meta_firstPublicationDate_DESC',\n  MetaLastPublicationDateAsc = 'meta_lastPublicationDate_ASC',\n  MetaLastPublicationDateDesc = 'meta_lastPublicationDate_DESC',\n  HomepageTitleAsc = 'homepageTitle_ASC',\n  HomepageTitleDesc = 'homepageTitle_DESC',\n  HeaderLeftTitleAsc = 'header_left_title_ASC',\n  HeaderLeftTitleDesc = 'header_left_title_DESC',\n  HeaderLeftRichTextAsc = 'header_left_rich_text_ASC',\n  HeaderLeftRichTextDesc = 'header_left_rich_text_DESC',\n  HeaderRightTitleAsc = 'header_right_title_ASC',\n  HeaderRightTitleDesc = 'header_right_title_DESC',\n  HeaderRightRichTextAsc = 'header_right_rich_text_ASC',\n  HeaderRightRichTextDesc = 'header_right_rich_text_DESC'\n}\n\nexport enum SortSectiony {\n  MetaFirstPublicationDateAsc = 'meta_firstPublicationDate_ASC',\n  MetaFirstPublicationDateDesc = 'meta_firstPublicationDate_DESC',\n  MetaLastPublicationDateAsc = 'meta_lastPublicationDate_ASC',\n  MetaLastPublicationDateDesc = 'meta_lastPublicationDate_DESC',\n  SectionTitleAsc = 'section_title_ASC',\n  SectionTitleDesc = 'section_title_DESC',\n  ColumnAsc = 'column_ASC',\n  ColumnDesc = 'column_DESC'\n}\n\nexport type WhereArticle = {\n  /** article-date */\n  articleDate?: Maybe<Scalars['Date']>;\n  /** article-date */\n  articleDate_before?: Maybe<Scalars['Date']>;\n  /** article-date */\n  articleDate_after?: Maybe<Scalars['Date']>;\n  highlight?: Maybe<Scalars['String']>;\n  highlight_fulltext?: Maybe<Scalars['String']>;\n  /** section */\n  section?: Maybe<Scalars['String']>;\n};\n\nexport type WhereHome = {\n  /** homepage-title */\n  homepageTitle_fulltext?: Maybe<Scalars['String']>;\n  /** header_left_title */\n  header_left_title_fulltext?: Maybe<Scalars['String']>;\n  /** header_left_rich_text */\n  header_left_rich_text_fulltext?: Maybe<Scalars['String']>;\n  /** header_right_title */\n  header_right_title_fulltext?: Maybe<Scalars['String']>;\n  /** header_right_rich_text */\n  header_right_rich_text_fulltext?: Maybe<Scalars['String']>;\n};\n\nexport type WhereSection = {\n  /** section_title */\n  section_title_fulltext?: Maybe<Scalars['String']>;\n  column?: Maybe<Scalars['String']>;\n  column_fulltext?: Maybe<Scalars['String']>;\n};\n\nexport type HomeQueryQueryVariables = {};\n\n\nexport type HomeQueryQuery = (\n  { __typename?: 'Query' }\n  & { allHomes: (\n    { __typename?: 'HomeConnectionConnection' }\n    & { edges?: Maybe<Array<Maybe<(\n      { __typename?: 'HomeConnectionEdge' }\n      & { node: (\n        { __typename?: 'Home' }\n        & Pick<Home, 'homepageTitle' | 'header_left_rich_text' | 'header_left_title' | 'header_right_rich_text' | 'header_right_title'>\n        & { column1_sections?: Maybe<Array<(\n          { __typename?: 'HomeColumn1_sections' }\n          & { section?: Maybe<{ __typename?: 'Home' } | { __typename?: 'Article' } | (\n            { __typename?: 'Section' }\n            & Pick<Section, 'section_title'>\n            & { _meta: (\n              { __typename?: 'Meta' }\n              & Pick<Meta, 'id'>\n            ) }\n          ) | { __typename?: '_ExternalLink' } | { __typename?: '_FileLink' } | { __typename?: '_ImageLink' }> }\n        )>>, column2_sections?: Maybe<Array<(\n          { __typename?: 'HomeColumn2_sections' }\n          & { section?: Maybe<{ __typename?: 'Home' } | { __typename?: 'Article' } | (\n            { __typename?: 'Section' }\n            & Pick<Section, 'section_title'>\n            & { _meta: (\n              { __typename?: 'Meta' }\n              & Pick<Meta, 'id'>\n            ) }\n          ) | { __typename?: '_ExternalLink' } | { __typename?: '_FileLink' } | { __typename?: '_ImageLink' }> }\n        )>>, column3_sections?: Maybe<Array<(\n          { __typename?: 'HomeColumn3_sections' }\n          & { section?: Maybe<{ __typename?: 'Home' } | { __typename?: 'Article' } | (\n            { __typename?: 'Section' }\n            & Pick<Section, 'section_title'>\n            & { _meta: (\n              { __typename?: 'Meta' }\n              & Pick<Meta, 'id'>\n            ) }\n          ) | { __typename?: '_ExternalLink' } | { __typename?: '_FileLink' } | { __typename?: '_ImageLink' }> }\n        )>>, column4_sections?: Maybe<Array<(\n          { __typename?: 'HomeColumn4_sections' }\n          & { section?: Maybe<{ __typename?: 'Home' } | { __typename?: 'Article' } | (\n            { __typename?: 'Section' }\n            & Pick<Section, 'section_title'>\n            & { _meta: (\n              { __typename?: 'Meta' }\n              & Pick<Meta, 'id'>\n            ) }\n          ) | { __typename?: '_ExternalLink' } | { __typename?: '_FileLink' } | { __typename?: '_ImageLink' }> }\n        )>>, column5_sections?: Maybe<Array<(\n          { __typename?: 'HomeColumn5_sections' }\n          & { section?: Maybe<{ __typename?: 'Home' } | { __typename?: 'Article' } | (\n            { __typename?: 'Section' }\n            & Pick<Section, 'section_title'>\n            & { _meta: (\n              { __typename?: 'Meta' }\n              & Pick<Meta, 'id'>\n            ) }\n          ) | { __typename?: '_ExternalLink' } | { __typename?: '_FileLink' } | { __typename?: '_ImageLink' }> }\n        )>> }\n      ) }\n    )>>> }\n  ) }\n);\n\n\nexport const HomeQueryDocument = gql`\n    query HomeQuery {\n  allHomes {\n    edges {\n      node {\n        homepageTitle\n        header_left_rich_text\n        header_left_title\n        header_right_rich_text\n        header_right_title\n        column1_sections {\n          section {\n            ... on Section {\n              section_title\n              _meta {\n                id\n              }\n            }\n          }\n        }\n        column2_sections {\n          section {\n            ... on Section {\n              section_title\n              _meta {\n                id\n              }\n            }\n          }\n        }\n        column3_sections {\n          section {\n            ... on Section {\n              section_title\n              _meta {\n                id\n              }\n            }\n          }\n        }\n        column4_sections {\n          section {\n            ... on Section {\n              section_title\n              _meta {\n                id\n              }\n            }\n          }\n        }\n        column5_sections {\n          section {\n            ... on Section {\n              section_title\n              _meta {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type HomeQueryComponentProps = Omit<ApolloReactComponents.QueryComponentOptions<HomeQueryQuery, HomeQueryQueryVariables>, 'query'>;\n\n    export const HomeQueryComponent = (props: HomeQueryComponentProps) => (\n      <ApolloReactComponents.Query<HomeQueryQuery, HomeQueryQueryVariables> query={HomeQueryDocument} {...props} />\n    );\n    \nexport type HomeQueryProps<TChildProps = {}> = ApolloReactHoc.DataProps<HomeQueryQuery, HomeQueryQueryVariables> & TChildProps;\nexport function withHomeQuery<TProps, TChildProps = {}>(operationOptions?: ApolloReactHoc.OperationOption<\n  TProps,\n  HomeQueryQuery,\n  HomeQueryQueryVariables,\n  HomeQueryProps<TChildProps>>) {\n    return ApolloReactHoc.withQuery<TProps, HomeQueryQuery, HomeQueryQueryVariables, HomeQueryProps<TChildProps>>(HomeQueryDocument, {\n      alias: 'homeQuery',\n      ...operationOptions\n    });\n};\nexport type HomeQueryQueryResult = ApolloReactCommon.QueryResult<HomeQueryQuery, HomeQueryQueryVariables>;","import React from 'react';\r\n\r\nimport Meta from \"../components/Meta\";\r\nimport Footer from \"../components/Footer\";\r\n\r\n/**\r\n * Default layout component\r\n */\r\nconst DefaultLayout: React.FC = ({ children }) => (\r\n  <div>\r\n    <Meta />\r\n    < main > {children} </main>\r\n    < Footer />\r\n  </div>\r\n);\r\n\r\nexport default DefaultLayout;\r\n","import * as React from 'react';\nimport { NextPage, GetStaticProps } from 'next';\nimport { prismicClient } from '../getPrismicClient';\nimport { HomeQueryDocument, HomeQueryQuery, HomeQueryQueryVariables } from '../graphql/__generated__/components';\nimport { richText } from '../utils/richText';\nimport DefaultLayout from '../layouts';\nimport { destroyCookie } from 'nookies';\nimport { previewCookie } from 'prismic-javascript';\n\ntype Props = { greeting: any };\n\nconst Home: NextPage<Props> = ({ greeting }) => <DefaultLayout>\n    Hello world! - user agent: {richText(greeting)}\n</DefaultLayout>;\n\nexport const getStaticProps: GetStaticProps<Props> = async (context) => {\n\n    console.log('Loading home query...');\n    if (context.preview) console.log('Running HomeQuery in preview mode!');\n\n    const result = await prismicClient.query<HomeQueryQuery, HomeQueryQueryVariables>({\n        query: HomeQueryDocument,\n        fetchPolicy: 'no-cache',\n        context: context.previewData\n    });\n\n    const greeting = result.data.allHomes.edges?.[0]?.node.homepageTitle;\n\n    return {\n        props: { greeting }\n    };\n};\n\n// Home.getInitialProps = async ({ }) => {\n//     return { greeting: \"bar\" }\n// }\n\nexport default Home;","// -- Prismic API endpoint\r\n// Determines which repository to query and fetch data from\r\n// Configure your site's access point here\r\nexport const apiEndpoint = 'https://beaufort-asia.cdn.prismic.io/api'\r\nexport const graphqlEndpoint = 'https://beaufort-asia.cdn.prismic.io/graphql'\r\n\r\n// -- Access Token if the repository is not public\r\n// Generate a token in your dashboard and configure it here if your repository is private\r\nexport const accessToken = ''\r\n\r\n// -- Link resolution rules\r\n// Manages the url links to internal Prismic documents\r\nexport const linkResolver = (doc: any) => {\r\n  if (doc.type === 'post') {\r\n    return `/blog/${doc.uid}`\r\n  }\r\n  return '/'\r\n}\r\n\r\n// Additional helper function for Next/Link components\r\nexport const hrefResolver = (doc: any) => {\r\n  if (doc.type === 'post') {\r\n    return '/blog/[uid]'\r\n  }\r\n  return '/'\r\n}\r\n","import React from \"react\";\nimport { RichText } from \"prismic-reactjs\";\nimport { linkResolver } from \"../prismic-configuration\";\n\n\nexport const richText = (rich_text_field: any) => <RichText linkResolver={linkResolver} render={rich_text_field} />\n","module.exports = require(\"@apollo/react-components\");","module.exports = require(\"@apollo/react-hoc\");","module.exports = require(\"apollo-cache-inmemory\");","module.exports = require(\"apollo-client\");","module.exports = require(\"apollo-link-prismic\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/head\");","module.exports = require(\"prismic-reactjs\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACxFA;AACA;AAEA;;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AAEA;;;;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;AAcA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8DA;AACA;AACA;;;;;;;;;;;;ACnFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAEA;AACA;AA0bA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAmEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AACA;AADA;AAIA;AAAA;;;;;;;;;;;;;;;;;;;ACnqBA;AAEA;AACA;AAEA;;;;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;AChBA;AAEA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAAA;AAAA;AADA;AAGA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}